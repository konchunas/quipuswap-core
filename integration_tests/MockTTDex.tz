{ parameter
    (or (or (or (pair %balance_of
                   (list %requests (pair (address %owner) (nat %token_id)))
                   (contract %callback
                      (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                (unit %close))
            (or (pair %get_reserves (contract %receiver (pair nat nat)) (nat %token_id))
                (pair %setDexFunction
                   (lambda %func
                      (pair (pair (or (or (or (pair %divestLiquidity
                                                 (pair %pair
                                                    (pair (pair (address %token_a_address) (nat %token_a_id))
                                                          (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                    (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))
                                                 (pair (nat %min_token_a_out) (pair (nat %min_token_b_out) (nat %shares))))
                                              (pair %initializeExchange
                                                 (pair %pair
                                                    (pair (pair (address %token_a_address) (nat %token_a_id))
                                                          (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                    (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))
                                                 (pair (nat %token_a_in) (nat %token_b_in))))
                                          (or (pair %investLiquidity
                                                 (pair %pair
                                                    (pair (pair (address %token_a_address) (nat %token_a_id))
                                                          (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                    (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))
                                                 (pair (nat %token_a_in) (nat %token_b_in)))
                                              (pair %tokenToTokenPayment
                                                 (pair %pair
                                                    (pair (pair (address %token_a_address) (nat %token_a_id))
                                                          (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                    (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))
                                                 (pair (or %operation (unit %buy) (unit %sell))
                                                       (pair (nat %amount_in) (pair (nat %min_amount_out) (address %receiver)))))))
                                      (pair %tokenToTokenRoutePayment
                                         (list %swaps
                                            (pair (or %operation (unit %buy) (unit %sell))
                                                  (pair %pair
                                                     (pair (pair (address %token_a_address) (nat %token_a_id))
                                                           (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                     (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))))
                                         (pair (nat %amount_in) (pair (nat %min_amount_out) (address %receiver)))))
                                  (pair (pair (pair (bool %entered)
                                                    (big_map %ledger (pair address nat) (pair (set %allowances address) (nat %balance))))
                                              (pair (big_map %pairs
                                                       nat
                                                       (pair (pair (nat %token_a_pool) (nat %token_b_pool)) (nat %total_supply)))
                                                    (nat %pairs_count)))
                                        (pair (big_map %token_to_id bytes nat)
                                              (big_map %tokens
                                                 nat
                                                 (pair (pair (pair (address %token_a_address) (nat %token_a_id))
                                                             (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                       (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))))))
                            address)
                      (pair (list operation)
                            (pair (pair (pair (bool %entered)
                                              (big_map %ledger (pair address nat) (pair (set %allowances address) (nat %balance))))
                                        (pair (big_map %pairs
                                                 nat
                                                 (pair (pair (nat %token_a_pool) (nat %token_b_pool)) (nat %total_supply)))
                                              (nat %pairs_count)))
                                  (pair (big_map %token_to_id bytes nat)
                                        (big_map %tokens
                                           nat
                                           (pair (pair (pair (address %token_a_address) (nat %token_a_id))
                                                       (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                 (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2)))))))))
                   (nat %index))))
        (or (or (pair %setTokenFunction
                   (lambda %func
                      (pair (pair (or (or (pair %iBalance_of
                                             (list %requests (pair (address %owner) (nat %token_id)))
                                             (contract %callback
                                                (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                                          (list %iTransfer
                                             (pair (address %from_)
                                                   (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
                                      (list %iUpdate_operators
                                         (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                                             (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))))
                                  (pair (pair (pair (bool %entered)
                                                    (big_map %ledger (pair address nat) (pair (set %allowances address) (nat %balance))))
                                              (pair (big_map %pairs
                                                       nat
                                                       (pair (pair (nat %token_a_pool) (nat %token_b_pool)) (nat %total_supply)))
                                                    (nat %pairs_count)))
                                        (pair (big_map %token_to_id bytes nat)
                                              (big_map %tokens
                                                 nat
                                                 (pair (pair (pair (address %token_a_address) (nat %token_a_id))
                                                             (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                       (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))))))
                            address)
                      (pair (list operation)
                            (pair (pair (pair (bool %entered)
                                              (big_map %ledger (pair address nat) (pair (set %allowances address) (nat %balance))))
                                        (pair (big_map %pairs
                                                 nat
                                                 (pair (pair (nat %token_a_pool) (nat %token_b_pool)) (nat %total_supply)))
                                              (nat %pairs_count)))
                                  (pair (big_map %token_to_id bytes nat)
                                        (big_map %tokens
                                           nat
                                           (pair (pair (pair (address %token_a_address) (nat %token_a_id))
                                                       (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                 (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2)))))))))
                   (nat %index))
                (list %transfer
                   (pair (address %from_)
                         (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
            (or (list %update_operators
                   (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                       (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))
                (or %use
                   (or (or (pair %divestLiquidity
                              (pair %pair
                                 (pair (pair (address %token_a_address) (nat %token_a_id))
                                       (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                 (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))
                              (pair (nat %min_token_a_out) (pair (nat %min_token_b_out) (nat %shares))))
                           (pair %initializeExchange
                              (pair %pair
                                 (pair (pair (address %token_a_address) (nat %token_a_id))
                                       (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                 (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))
                              (pair (nat %token_a_in) (nat %token_b_in))))
                       (or (pair %investLiquidity
                              (pair %pair
                                 (pair (pair (address %token_a_address) (nat %token_a_id))
                                       (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                 (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))
                              (pair (nat %token_a_in) (nat %token_b_in)))
                           (pair %tokenToTokenPayment
                              (pair %pair
                                 (pair (pair (address %token_a_address) (nat %token_a_id))
                                       (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                 (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))
                              (pair (or %operation (unit %buy) (unit %sell))
                                    (pair (nat %amount_in) (pair (nat %min_amount_out) (address %receiver)))))))
                   (pair %tokenToTokenRoutePayment
                      (list %swaps
                         (pair (or %operation (unit %buy) (unit %sell))
                               (pair %pair
                                  (pair (pair (address %token_a_address) (nat %token_a_id))
                                        (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                  (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))))
                      (pair (nat %amount_in) (pair (nat %min_amount_out) (address %receiver)))))))) ;
  storage
    (pair (pair (big_map %dex_lambdas
                   nat
                   (lambda
                      (pair (pair (or (or (or (pair %divestLiquidity
                                                 (pair %pair
                                                    (pair (pair (address %token_a_address) (nat %token_a_id))
                                                          (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                    (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))
                                                 (pair (nat %min_token_a_out) (pair (nat %min_token_b_out) (nat %shares))))
                                              (pair %initializeExchange
                                                 (pair %pair
                                                    (pair (pair (address %token_a_address) (nat %token_a_id))
                                                          (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                    (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))
                                                 (pair (nat %token_a_in) (nat %token_b_in))))
                                          (or (pair %investLiquidity
                                                 (pair %pair
                                                    (pair (pair (address %token_a_address) (nat %token_a_id))
                                                          (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                    (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))
                                                 (pair (nat %token_a_in) (nat %token_b_in)))
                                              (pair %tokenToTokenPayment
                                                 (pair %pair
                                                    (pair (pair (address %token_a_address) (nat %token_a_id))
                                                          (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                    (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))
                                                 (pair (or %operation (unit %buy) (unit %sell))
                                                       (pair (nat %amount_in) (pair (nat %min_amount_out) (address %receiver)))))))
                                      (pair %tokenToTokenRoutePayment
                                         (list %swaps
                                            (pair (or %operation (unit %buy) (unit %sell))
                                                  (pair %pair
                                                     (pair (pair (address %token_a_address) (nat %token_a_id))
                                                           (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                     (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))))
                                         (pair (nat %amount_in) (pair (nat %min_amount_out) (address %receiver)))))
                                  (pair (pair (pair (bool %entered)
                                                    (big_map %ledger (pair address nat) (pair (set %allowances address) (nat %balance))))
                                              (pair (big_map %pairs
                                                       nat
                                                       (pair (pair (nat %token_a_pool) (nat %token_b_pool)) (nat %total_supply)))
                                                    (nat %pairs_count)))
                                        (pair (big_map %token_to_id bytes nat)
                                              (big_map %tokens
                                                 nat
                                                 (pair (pair (pair (address %token_a_address) (nat %token_a_id))
                                                             (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                       (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))))))
                            address)
                      (pair (list operation)
                            (pair (pair (pair (bool %entered)
                                              (big_map %ledger (pair address nat) (pair (set %allowances address) (nat %balance))))
                                        (pair (big_map %pairs
                                                 nat
                                                 (pair (pair (nat %token_a_pool) (nat %token_b_pool)) (nat %total_supply)))
                                              (nat %pairs_count)))
                                  (pair (big_map %token_to_id bytes nat)
                                        (big_map %tokens
                                           nat
                                           (pair (pair (pair (address %token_a_address) (nat %token_a_id))
                                                       (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                 (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))))))))
                (big_map %metadata string bytes))
          (pair (pair %storage
                   (pair (pair (bool %entered)
                               (big_map %ledger (pair address nat) (pair (set %allowances address) (nat %balance))))
                         (pair (big_map %pairs
                                  nat
                                  (pair (pair (nat %token_a_pool) (nat %token_b_pool)) (nat %total_supply)))
                               (nat %pairs_count)))
                   (pair (big_map %token_to_id bytes nat)
                         (big_map %tokens
                            nat
                            (pair (pair (pair (address %token_a_address) (nat %token_a_id))
                                        (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                  (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2)))))))
                (big_map %token_lambdas
                   nat
                   (lambda
                      (pair (pair (or (or (pair %iBalance_of
                                             (list %requests (pair (address %owner) (nat %token_id)))
                                             (contract %callback
                                                (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                                          (list %iTransfer
                                             (pair (address %from_)
                                                   (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
                                      (list %iUpdate_operators
                                         (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                                             (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))))
                                  (pair (pair (pair (bool %entered)
                                                    (big_map %ledger (pair address nat) (pair (set %allowances address) (nat %balance))))
                                              (pair (big_map %pairs
                                                       nat
                                                       (pair (pair (nat %token_a_pool) (nat %token_b_pool)) (nat %total_supply)))
                                                    (nat %pairs_count)))
                                        (pair (big_map %token_to_id bytes nat)
                                              (big_map %tokens
                                                 nat
                                                 (pair (pair (pair (address %token_a_address) (nat %token_a_id))
                                                             (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                       (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2))))))))
                            address)
                      (pair (list operation)
                            (pair (pair (pair (bool %entered)
                                              (big_map %ledger (pair address nat) (pair (set %allowances address) (nat %balance))))
                                        (pair (big_map %pairs
                                                 nat
                                                 (pair (pair (nat %token_a_pool) (nat %token_b_pool)) (nat %total_supply)))
                                              (nat %pairs_count)))
                                  (pair (big_map %token_to_id bytes nat)
                                        (big_map %tokens
                                           nat
                                           (pair (pair (pair (address %token_a_address) (nat %token_a_id))
                                                       (pair (or %token_a_type (unit %fa12) (unit %fa2)) (address %token_b_address)))
                                                 (pair (nat %token_b_id) (or %token_b_type (unit %fa12) (unit %fa2)))))))))))) ;
  code { LAMBDA
           (pair (pair address nat)
                 (pair (pair (pair bool (big_map (pair address nat) (pair (set address) nat)))
                             (pair (big_map nat (pair (pair nat nat) nat)) nat))
                       (pair (big_map bytes nat)
                             (big_map
                                nat
                                (pair (pair (pair address nat) (pair (or unit unit) address)) (pair nat (or unit unit)))))))
           (pair (set address) nat)
           { UNPAIR ;
             SWAP ;
             CAR ;
             CAR ;
             CDR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH nat 0 ; EMPTY_SET address ; PAIR } {} } ;
         LAMBDA
           (pair (pair (pair (pair address nat) (pair (or unit unit) address)) (pair nat (or unit unit)))
                 (pair (pair (pair bool (big_map (pair address nat) (pair (set address) nat)))
                             (pair (big_map nat (pair (pair nat nat) nat)) nat))
                       (pair (big_map bytes nat)
                             (big_map
                                nat
                                (pair (pair (pair address nat) (pair (or unit unit) address)) (pair nat (or unit unit)))))))
           (pair (pair (pair nat nat) nat) nat)
           { UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             SWAP ;
             PACK ;
             GET ;
             IF_NONE { DUP ; CAR ; CDR ; CDR } {} ;
             DUP ;
             DIG 2 ;
             CAR ;
             CDR ;
             CAR ;
             DIG 2 ;
             GET ;
             IF_NONE { PUSH nat 0 ; PUSH nat 0 ; PUSH nat 0 ; PAIR ; PAIR } {} ;
             PAIR } ;
         LAMBDA
           address
           (contract unit)
           { CONTRACT %close unit ;
             IF_NONE { PUSH string "Dex/no-close-entrypoint" ; FAILWITH } {} } ;
         LAMBDA
           (pair (pair (pair address address) (pair nat nat)) address)
           operation
           { UNPAIR ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DIG 4 ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE { PUSH string "Dex/not-token" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 3 ;
             DIG 3 ;
             PAIR ;
             DIG 4 ;
             DIG 4 ;
             DIG 2 ;
             UNPAIR ;
             NIL (pair address (list (pair address (pair nat nat)))) ;
             NIL (pair address (pair nat nat)) ;
             DIG 2 ;
             DIG 3 ;
             PAIR ;
             DIG 4 ;
             PAIR ;
             CONS ;
             DIG 2 ;
             PAIR ;
             CONS ;
             TRANSFER_TOKENS } ;
         LAMBDA
           (pair (pair address address) (pair nat address))
           operation
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             SWAP ;
             CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))) ;
             IF_NONE { PUSH string "Dex/not-token" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 2 ;
             DIG 4 ;
             DIG 4 ;
             DUG 2 ;
             PAIR ;
             SWAP ;
             PAIR ;
             TRANSFER_TOKENS } ;
         DUP 5 ;
         LAMBDA
           (pair (lambda
                    (pair (pair address nat)
                          (pair (pair (pair bool (big_map (pair address nat) (pair (set address) nat)))
                                      (pair (big_map nat (pair (pair nat nat) nat)) nat))
                                (pair (big_map bytes nat)
                                      (big_map
                                         nat
                                         (pair (pair (pair address nat) (pair (or unit unit) address)) (pair nat (or unit unit)))))))
                    (pair (set address) nat))
                 (pair (pair (or (or (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat))))
                                     (list (pair address (list (pair address (pair nat nat))))))
                                 (list (or (pair address (pair address nat)) (pair address (pair address nat)))))
                             (pair (pair (pair bool (big_map (pair address nat) (pair (set address) nat)))
                                         (pair (big_map nat (pair (pair nat nat) nat)) nat))
                                   (pair (big_map bytes nat)
                                         (big_map
                                            nat
                                            (pair (pair (pair address nat) (pair (or unit unit) address)) (pair nat (or unit unit)))))))
                       address))
           (pair (list operation)
                 (pair (pair (pair bool (big_map (pair address nat) (pair (set address) nat)))
                             (pair (big_map nat (pair (pair nat nat) nat)) nat))
                       (pair (big_map bytes nat)
                             (big_map
                                nat
                                (pair (pair (pair address nat) (pair (or unit unit) address)) (pair nat (or unit unit)))))))
           { UNPAIR ;
             SWAP ;
             CAR ;
             UNPAIR ;
             IF_LEFT
               { IF_LEFT
                   { DROP ; SWAP ; DROP }
                   { ITER { DUP ;
                            DUG 2 ;
                            CDR ;
                            ITER { DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   CAR ;
                                   DUP 4 ;
                                   CAR ;
                                   PAIR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   PAIR ;
                                   DUP 6 ;
                                   SWAP ;
                                   EXEC ;
                                   DUP ;
                                   CAR ;
                                   SENDER ;
                                   MEM ;
                                   SENDER ;
                                   DUP 7 ;
                                   CAR ;
                                   COMPARE ;
                                   EQ ;
                                   OR ;
                                   IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } ;
                                   DUP 4 ;
                                   CDR ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   COMPARE ;
                                   LT ;
                                   IF { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } {} ;
                                   DUP 4 ;
                                   CDR ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   SUB ;
                                   ABS ;
                                   SWAP ;
                                   CAR ;
                                   PAIR ;
                                   DUP 3 ;
                                   CDR ;
                                   DUP 4 ;
                                   CAR ;
                                   CDR ;
                                   DUP 5 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   DIG 3 ;
                                   DIG 4 ;
                                   SWAP ;
                                   SOME ;
                                   SWAP ;
                                   UPDATE ;
                                   DIG 3 ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   PAIR ;
                                   PAIR ;
                                   PAIR ;
                                   DUP ;
                                   DUP 3 ;
                                   CDR ;
                                   CAR ;
                                   DUP 4 ;
                                   CAR ;
                                   PAIR ;
                                   PAIR ;
                                   DUP 5 ;
                                   SWAP ;
                                   EXEC ;
                                   DUP 3 ;
                                   CDR ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   ADD ;
                                   SWAP ;
                                   CAR ;
                                   PAIR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   DUP 3 ;
                                   CAR ;
                                   CDR ;
                                   DUP 4 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   DIG 3 ;
                                   DUP 6 ;
                                   CDR ;
                                   CAR ;
                                   DIG 6 ;
                                   CAR ;
                                   PAIR ;
                                   SWAP ;
                                   SOME ;
                                   SWAP ;
                                   UPDATE ;
                                   DIG 3 ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   PAIR ;
                                   PAIR ;
                                   PAIR } ;
                            SWAP ;
                            DROP } ;
                     SWAP ;
                     DROP } }
               { DROP ; SWAP ; DROP } ;
             NIL operation ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DIG 6 ;
         UNPAIR ;
         SELF_ADDRESS ;
         SWAP ;
         IF_LEFT
           { DIG 4 ;
             DROP ;
             DIG 4 ;
             DROP ;
             DIG 4 ;
             DROP ;
             DIG 4 ;
             DROP ;
             IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     PUSH nat 2 ;
                     PAIR ;
                     DUG 2 ;
                     LEFT (list (pair address (list (pair address (pair nat nat))))) ;
                     LEFT (list (or (pair address (pair address nat)) (pair address (pair address nat)))) ;
                     DIG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     IF_LEFT
                       { IF_LEFT
                           { DROP ;
                             DIG 3 ;
                             DROP ;
                             DIG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             DIG 3 ;
                             PAIR ;
                             SWAP ;
                             DROP ;
                             UNPAIR ;
                             NIL operation ;
                             SWAP ;
                             IF_LEFT
                               { IF_LEFT
                                   { SWAP ;
                                     DROP ;
                                     NIL (pair (pair address nat) nat) ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     ITER { SWAP ;
                                            DUP 4 ;
                                            DUP 3 ;
                                            PAIR ;
                                            DUP 7 ;
                                            SWAP ;
                                            EXEC ;
                                            CDR ;
                                            DIG 2 ;
                                            PAIR ;
                                            CONS } ;
                                     DIG 4 ;
                                     DROP ;
                                     NIL operation ;
                                     DIG 2 ;
                                     CDR ;
                                     PUSH mutez 0 ;
                                     DIG 3 ;
                                     TRANSFER_TOKENS ;
                                     CONS }
                                   { DROP ; DIG 3 ; DROP } }
                               { DROP ; DIG 3 ; DROP } ;
                             PAIR }
                           { DROP ;
                             DIG 4 ;
                             DROP ;
                             DIG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             DIG 3 ;
                             PAIR ;
                             PAIR ;
                             DIG 2 ;
                             SWAP ;
                             EXEC } }
                       { DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         PAIR ;
                         SWAP ;
                         DROP ;
                         UNPAIR ;
                         IF_LEFT
                           { DIG 3 ; DROP ; IF_LEFT { DROP } { DROP } }
                           { ITER { IF_LEFT
                                      { DUP ;
                                        CAR ;
                                        SENDER ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { PUSH string "FA2_NOT_OWNER" ; FAILWITH } {} ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP 5 ;
                                        SWAP ;
                                        EXEC ;
                                        DUP 3 ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        CDR ;
                                        DUP 5 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DUP 4 ;
                                        CDR ;
                                        DIG 4 ;
                                        CAR ;
                                        DUP 6 ;
                                        CDR ;
                                        CAR ;
                                        PUSH bool True ;
                                        SWAP ;
                                        UPDATE ;
                                        PAIR ;
                                        DUP 5 ;
                                        CDR ;
                                        CDR ;
                                        DIG 5 ;
                                        CAR ;
                                        PAIR ;
                                        SWAP ;
                                        SOME ;
                                        SWAP ;
                                        UPDATE ;
                                        DIG 3 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR }
                                      { DUP ;
                                        CAR ;
                                        SENDER ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { PUSH string "FA2_NOT_OWNER" ; FAILWITH } {} ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP 5 ;
                                        SWAP ;
                                        EXEC ;
                                        DUP 3 ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        CDR ;
                                        DUP 5 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DUP 4 ;
                                        CDR ;
                                        DIG 4 ;
                                        CAR ;
                                        DUP 6 ;
                                        CDR ;
                                        CAR ;
                                        PUSH bool False ;
                                        SWAP ;
                                        UPDATE ;
                                        PAIR ;
                                        DUP 5 ;
                                        CDR ;
                                        CDR ;
                                        DIG 5 ;
                                        CAR ;
                                        PAIR ;
                                        SWAP ;
                                        SOME ;
                                        SWAP ;
                                        UPDATE ;
                                        DIG 3 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR } } ;
                             DIG 2 ;
                             DROP } ;
                         NIL operation ;
                         PAIR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR }
                   { DROP 2 ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     DUP ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     NOT ;
                     IF { PUSH string "Dex/not-entered" ; FAILWITH } {} ;
                     SELF_ADDRESS ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "Dex/not-self" ; FAILWITH } {} ;
                     DUP ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PUSH bool False ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } }
               { SWAP ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH nat 0 ; PUSH nat 0 ; PUSH nat 0 ; PAIR ; PAIR } {} ;
                     DIG 2 ;
                     NIL operation ;
                     DIG 3 ;
                     CAR ;
                     PUSH mutez 0 ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR }
                   { PUSH nat 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     COMPARE ;
                     GT ;
                     IF { DROP 2 ; PUSH string "Dex/wrong-index" ; FAILWITH }
                        { DUP ;
                          DUG 2 ;
                          CAR ;
                          DIG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE
                            { DUP 3 ;
                              CDR ;
                              DUP 4 ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              CAR ;
                              CAR ;
                              DIG 4 ;
                              DIG 4 ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              PAIR }
                            { DROP 3 ; PUSH string "Dex/function-set" ; FAILWITH } } ;
                     NIL operation ;
                     PAIR } } }
           { IF_LEFT
               { DIG 4 ;
                 DROP ;
                 DIG 4 ;
                 DROP ;
                 DIG 4 ;
                 DROP ;
                 DIG 4 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     PUSH nat 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     COMPARE ;
                     GT ;
                     IF { DROP 2 ; PUSH string "Dex/wrong-index" ; FAILWITH }
                        { DUP ;
                          DUG 2 ;
                          CAR ;
                          DIG 2 ;
                          CDR ;
                          DUP 3 ;
                          CDR ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE
                            { DUP 3 ;
                              CDR ;
                              CDR ;
                              DUG 2 ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              SWAP ;
                              CAR ;
                              PAIR }
                            { DROP 3 ; PUSH string "Dex/function-set" ; FAILWITH } } ;
                     NIL operation ;
                     PAIR }
                   { DIG 2 ;
                     PUSH nat 0 ;
                     PAIR ;
                     DUG 2 ;
                     RIGHT (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat)))) ;
                     LEFT (list (or (pair address (pair address nat)) (pair address (pair address nat)))) ;
                     DIG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     IF_LEFT
                       { IF_LEFT
                           { DROP ;
                             DIG 3 ;
                             DROP ;
                             DIG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             DIG 3 ;
                             PAIR ;
                             SWAP ;
                             DROP ;
                             UNPAIR ;
                             NIL operation ;
                             SWAP ;
                             IF_LEFT
                               { IF_LEFT
                                   { SWAP ;
                                     DROP ;
                                     NIL (pair (pair address nat) nat) ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     ITER { SWAP ;
                                            DUP 4 ;
                                            DUP 3 ;
                                            PAIR ;
                                            DUP 7 ;
                                            SWAP ;
                                            EXEC ;
                                            CDR ;
                                            DIG 2 ;
                                            PAIR ;
                                            CONS } ;
                                     DIG 4 ;
                                     DROP ;
                                     NIL operation ;
                                     DIG 2 ;
                                     CDR ;
                                     PUSH mutez 0 ;
                                     DIG 3 ;
                                     TRANSFER_TOKENS ;
                                     CONS }
                                   { DROP ; DIG 3 ; DROP } }
                               { DROP ; DIG 3 ; DROP } ;
                             PAIR }
                           { DROP ;
                             DIG 4 ;
                             DROP ;
                             DIG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             DIG 3 ;
                             PAIR ;
                             PAIR ;
                             DIG 2 ;
                             SWAP ;
                             EXEC } }
                       { DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         PAIR ;
                         SWAP ;
                         DROP ;
                         UNPAIR ;
                         IF_LEFT
                           { DIG 3 ; DROP ; IF_LEFT { DROP } { DROP } }
                           { ITER { IF_LEFT
                                      { DUP ;
                                        CAR ;
                                        SENDER ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { PUSH string "FA2_NOT_OWNER" ; FAILWITH } {} ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP 5 ;
                                        SWAP ;
                                        EXEC ;
                                        DUP 3 ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        CDR ;
                                        DUP 5 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DUP 4 ;
                                        CDR ;
                                        DIG 4 ;
                                        CAR ;
                                        DUP 6 ;
                                        CDR ;
                                        CAR ;
                                        PUSH bool True ;
                                        SWAP ;
                                        UPDATE ;
                                        PAIR ;
                                        DUP 5 ;
                                        CDR ;
                                        CDR ;
                                        DIG 5 ;
                                        CAR ;
                                        PAIR ;
                                        SWAP ;
                                        SOME ;
                                        SWAP ;
                                        UPDATE ;
                                        DIG 3 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR }
                                      { DUP ;
                                        CAR ;
                                        SENDER ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { PUSH string "FA2_NOT_OWNER" ; FAILWITH } {} ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP 5 ;
                                        SWAP ;
                                        EXEC ;
                                        DUP 3 ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        CDR ;
                                        DUP 5 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DUP 4 ;
                                        CDR ;
                                        DIG 4 ;
                                        CAR ;
                                        DUP 6 ;
                                        CDR ;
                                        CAR ;
                                        PUSH bool False ;
                                        SWAP ;
                                        UPDATE ;
                                        PAIR ;
                                        DUP 5 ;
                                        CDR ;
                                        CDR ;
                                        DIG 5 ;
                                        CAR ;
                                        PAIR ;
                                        SWAP ;
                                        SOME ;
                                        SWAP ;
                                        UPDATE ;
                                        DIG 3 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR } } ;
                             DIG 2 ;
                             DROP } ;
                         NIL operation ;
                         PAIR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR } }
               { IF_LEFT
                   { DIG 4 ;
                     DROP ;
                     DIG 4 ;
                     DROP ;
                     DIG 4 ;
                     DROP ;
                     DIG 4 ;
                     DROP ;
                     DIG 2 ;
                     PUSH nat 1 ;
                     PAIR ;
                     DUG 2 ;
                     RIGHT
                       (or (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat))))
                           (list (pair address (list (pair address (pair nat nat)))))) ;
                     DIG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     IF_LEFT
                       { IF_LEFT
                           { DROP ;
                             DIG 3 ;
                             DROP ;
                             DIG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             DIG 3 ;
                             PAIR ;
                             SWAP ;
                             DROP ;
                             UNPAIR ;
                             NIL operation ;
                             SWAP ;
                             IF_LEFT
                               { IF_LEFT
                                   { SWAP ;
                                     DROP ;
                                     NIL (pair (pair address nat) nat) ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     ITER { SWAP ;
                                            DUP 4 ;
                                            DUP 3 ;
                                            PAIR ;
                                            DUP 7 ;
                                            SWAP ;
                                            EXEC ;
                                            CDR ;
                                            DIG 2 ;
                                            PAIR ;
                                            CONS } ;
                                     DIG 4 ;
                                     DROP ;
                                     NIL operation ;
                                     DIG 2 ;
                                     CDR ;
                                     PUSH mutez 0 ;
                                     DIG 3 ;
                                     TRANSFER_TOKENS ;
                                     CONS }
                                   { DROP ; DIG 3 ; DROP } }
                               { DROP ; DIG 3 ; DROP } ;
                             PAIR }
                           { DROP ;
                             DIG 4 ;
                             DROP ;
                             DIG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             DIG 3 ;
                             PAIR ;
                             PAIR ;
                             DIG 2 ;
                             SWAP ;
                             EXEC } }
                       { DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         PAIR ;
                         SWAP ;
                         DROP ;
                         UNPAIR ;
                         IF_LEFT
                           { DIG 3 ; DROP ; IF_LEFT { DROP } { DROP } }
                           { ITER { IF_LEFT
                                      { DUP ;
                                        CAR ;
                                        SENDER ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { PUSH string "FA2_NOT_OWNER" ; FAILWITH } {} ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP 5 ;
                                        SWAP ;
                                        EXEC ;
                                        DUP 3 ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        CDR ;
                                        DUP 5 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DUP 4 ;
                                        CDR ;
                                        DIG 4 ;
                                        CAR ;
                                        DUP 6 ;
                                        CDR ;
                                        CAR ;
                                        PUSH bool True ;
                                        SWAP ;
                                        UPDATE ;
                                        PAIR ;
                                        DUP 5 ;
                                        CDR ;
                                        CDR ;
                                        DIG 5 ;
                                        CAR ;
                                        PAIR ;
                                        SWAP ;
                                        SOME ;
                                        SWAP ;
                                        UPDATE ;
                                        DIG 3 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR }
                                      { DUP ;
                                        CAR ;
                                        SENDER ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { PUSH string "FA2_NOT_OWNER" ; FAILWITH } {} ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP 5 ;
                                        SWAP ;
                                        EXEC ;
                                        DUP 3 ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        CDR ;
                                        DUP 5 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DUP 4 ;
                                        CDR ;
                                        DIG 4 ;
                                        CAR ;
                                        DUP 6 ;
                                        CDR ;
                                        CAR ;
                                        PUSH bool False ;
                                        SWAP ;
                                        UPDATE ;
                                        PAIR ;
                                        DUP 5 ;
                                        CDR ;
                                        CDR ;
                                        DIG 5 ;
                                        CAR ;
                                        PAIR ;
                                        SWAP ;
                                        SOME ;
                                        SWAP ;
                                        UPDATE ;
                                        DIG 3 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR } } ;
                             DIG 2 ;
                             DROP } ;
                         NIL operation ;
                         PAIR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR }
                   { DIG 3 ;
                     DROP ;
                     DUP ;
                     IF_LEFT
                       { IF_LEFT
                           { IF_LEFT
                               { DROP ;
                                 SWAP ;
                                 DUP 3 ;
                                 CDR ;
                                 CAR ;
                                 DIG 2 ;
                                 NIL operation ;
                                 DUP 4 ;
                                 DIG 8 ;
                                 SWAP ;
                                 EXEC ;
                                 PUSH mutez 0 ;
                                 UNIT ;
                                 TRANSFER_TOKENS ;
                                 CONS ;
                                 DUP 3 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 PAIR ;
                                 DIG 2 ;
                                 IF_LEFT
                                   { IF_LEFT
                                       { IF_LEFT
                                           { SWAP ;
                                             DROP ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             IF { PUSH string "Dex/reentrancy" ; FAILWITH }
                                                { DUP 3 ;
                                                  CDR ;
                                                  DUP 4 ;
                                                  CAR ;
                                                  CDR ;
                                                  DIG 4 ;
                                                  CAR ;
                                                  CAR ;
                                                  CDR ;
                                                  PUSH bool True ;
                                                  PAIR ;
                                                  PAIR ;
                                                  PAIR } ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CDR ;
                                             CAR ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             COMPARE ;
                                             GE ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             DUP 4 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             COMPARE ;
                                             EQ ;
                                             AND ;
                                             IF { PUSH string "Dex/wrong-token-id" ; FAILWITH } {} ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             COMPARE ;
                                             GT ;
                                             IF { PUSH string "Dex/wrong-pair" ; FAILWITH } {} ;
                                             DUP ;
                                             DUP 3 ;
                                             CAR ;
                                             PAIR ;
                                             DIG 8 ;
                                             SWAP ;
                                             EXEC ;
                                             DUP ;
                                             CAR ;
                                             SWAP ;
                                             CDR ;
                                             DUP ;
                                             DUP 4 ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             COMPARE ;
                                             EQ ;
                                             IF { PUSH string "Dex/pair-not-exist" ; FAILWITH } {} ;
                                             PUSH nat 0 ;
                                             DUP 3 ;
                                             CAR ;
                                             CDR ;
                                             DUP 4 ;
                                             CAR ;
                                             CAR ;
                                             MUL ;
                                             COMPARE ;
                                             GT ;
                                             IF {} { PUSH string "Dex/not-launched" ; FAILWITH } ;
                                             DUP 3 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             SENDER ;
                                             PAIR ;
                                             PAIR ;
                                             DIG 10 ;
                                             SWAP ;
                                             EXEC ;
                                             DUP ;
                                             CDR ;
                                             PUSH nat 0 ;
                                             DUP 7 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             COMPARE ;
                                             GT ;
                                             IF {} { PUSH string "Dex/zero-burn-shares" ; FAILWITH } ;
                                             DUP ;
                                             DUP 7 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             COMPARE ;
                                             LE ;
                                             IF {} { PUSH string "Dex/insufficient-shares" ; FAILWITH } ;
                                             DUP 6 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             SWAP ;
                                             SUB ;
                                             ABS ;
                                             SWAP ;
                                             CAR ;
                                             PAIR ;
                                             DUP 4 ;
                                             CDR ;
                                             DUP 5 ;
                                             CAR ;
                                             CDR ;
                                             DUP 6 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             DIG 3 ;
                                             DUP 5 ;
                                             SENDER ;
                                             PAIR ;
                                             SWAP ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             DIG 5 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             DUP 3 ;
                                             CDR ;
                                             DUP 5 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             DUP 5 ;
                                             CAR ;
                                             CAR ;
                                             MUL ;
                                             EDIV ;
                                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                             CAR ;
                                             DUP 4 ;
                                             CDR ;
                                             DUP 6 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             DUP 6 ;
                                             CAR ;
                                             CDR ;
                                             MUL ;
                                             EDIV ;
                                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                             CAR ;
                                             PUSH nat 0 ;
                                             DUP 7 ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             COMPARE ;
                                             GT ;
                                             PUSH nat 0 ;
                                             DUP 8 ;
                                             CDR ;
                                             CAR ;
                                             COMPARE ;
                                             GT ;
                                             AND ;
                                             IF {} { PUSH string "Dex/dust-output" ; FAILWITH } ;
                                             DUP 6 ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             COMPARE ;
                                             GE ;
                                             DUP 7 ;
                                             CDR ;
                                             CAR ;
                                             DUP 4 ;
                                             COMPARE ;
                                             GE ;
                                             AND ;
                                             IF {} { PUSH string "Dex/high-expectation" ; FAILWITH } ;
                                             DUP 6 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             DUP 6 ;
                                             CDR ;
                                             SUB ;
                                             ABS ;
                                             DIG 5 ;
                                             CAR ;
                                             PAIR ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CDR ;
                                             DUP 5 ;
                                             DIG 3 ;
                                             CAR ;
                                             CAR ;
                                             SUB ;
                                             ABS ;
                                             PAIR ;
                                             PAIR ;
                                             DUP ;
                                             CDR ;
                                             DUP 3 ;
                                             DUP 3 ;
                                             CAR ;
                                             CDR ;
                                             SUB ;
                                             ABS ;
                                             DIG 2 ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             DUP 6 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             CAR ;
                                             IF_LEFT
                                               { DROP ;
                                                 DIG 6 ;
                                                 DUP 7 ;
                                                 CAR ;
                                                 CAR ;
                                                 CAR ;
                                                 CAR ;
                                                 DIG 4 ;
                                                 PAIR ;
                                                 SENDER ;
                                                 DUP 9 ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DUP 10 ;
                                                 SWAP ;
                                                 EXEC ;
                                                 CONS }
                                               { DROP ;
                                                 DIG 6 ;
                                                 DUP 7 ;
                                                 CAR ;
                                                 CAR ;
                                                 CAR ;
                                                 CAR ;
                                                 DUP 8 ;
                                                 CAR ;
                                                 CAR ;
                                                 CAR ;
                                                 CDR ;
                                                 DIG 5 ;
                                                 PAIR ;
                                                 SENDER ;
                                                 DUP 10 ;
                                                 PAIR ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DUP 11 ;
                                                 SWAP ;
                                                 EXEC ;
                                                 CONS } ;
                                             DUP 6 ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             IF_LEFT
                                               { DROP ;
                                                 DIG 9 ;
                                                 DROP ;
                                                 DIG 5 ;
                                                 CAR ;
                                                 CAR ;
                                                 CDR ;
                                                 CDR ;
                                                 DIG 3 ;
                                                 PAIR ;
                                                 SENDER ;
                                                 DIG 6 ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DIG 6 ;
                                                 SWAP ;
                                                 EXEC ;
                                                 CONS }
                                               { DROP ;
                                                 DIG 8 ;
                                                 DROP ;
                                                 DUP 6 ;
                                                 CAR ;
                                                 CAR ;
                                                 CDR ;
                                                 CDR ;
                                                 DIG 6 ;
                                                 CAR ;
                                                 CDR ;
                                                 CAR ;
                                                 DIG 4 ;
                                                 PAIR ;
                                                 SENDER ;
                                                 DIG 7 ;
                                                 PAIR ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DIG 6 ;
                                                 SWAP ;
                                                 EXEC ;
                                                 CONS } ;
                                             DUP 3 ;
                                             CDR ;
                                             DUP 4 ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             DUP 5 ;
                                             CAR ;
                                             CDR ;
                                             CAR ;
                                             DIG 4 ;
                                             DIG 6 ;
                                             SWAP ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             PAIR ;
                                             DIG 3 ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR }
                                           { DROP ;
                                             SWAP ;
                                             DROP ;
                                             SWAP ;
                                             DROP ;
                                             SWAP ;
                                             DROP ;
                                             DIG 2 ;
                                             DROP ;
                                             DIG 2 ;
                                             DROP ;
                                             DIG 2 ;
                                             DROP ;
                                             DIG 2 ;
                                             DROP } }
                                       { DIG 2 ;
                                         DROP ;
                                         DIG 2 ;
                                         DROP ;
                                         DIG 2 ;
                                         DROP ;
                                         DIG 3 ;
                                         DROP ;
                                         DIG 3 ;
                                         DROP ;
                                         DIG 3 ;
                                         DROP ;
                                         DIG 3 ;
                                         DROP ;
                                         IF_LEFT { DROP } { DROP } } }
                                   { DROP ;
                                     SWAP ;
                                     DROP ;
                                     SWAP ;
                                     DROP ;
                                     SWAP ;
                                     DROP ;
                                     DIG 2 ;
                                     DROP ;
                                     DIG 2 ;
                                     DROP ;
                                     DIG 2 ;
                                     DROP ;
                                     DIG 2 ;
                                     DROP } }
                               { DROP ;
                                 DIG 7 ;
                                 DROP ;
                                 SWAP ;
                                 DUP 3 ;
                                 CDR ;
                                 CAR ;
                                 DIG 2 ;
                                 NIL operation ;
                                 DUP 4 ;
                                 DIG 8 ;
                                 SWAP ;
                                 EXEC ;
                                 PUSH mutez 0 ;
                                 UNIT ;
                                 TRANSFER_TOKENS ;
                                 CONS ;
                                 DUP 3 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 PAIR ;
                                 DIG 2 ;
                                 IF_LEFT
                                   { IF_LEFT
                                       { IF_LEFT
                                           { DROP ;
                                             SWAP ;
                                             DROP ;
                                             SWAP ;
                                             DROP ;
                                             SWAP ;
                                             DROP ;
                                             DIG 2 ;
                                             DROP ;
                                             DIG 2 ;
                                             DROP ;
                                             DIG 2 ;
                                             DROP }
                                           { SWAP ;
                                             DROP ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             IF { PUSH string "Dex/reentrancy" ; FAILWITH }
                                                { DUP 3 ;
                                                  CDR ;
                                                  DUP 4 ;
                                                  CAR ;
                                                  CDR ;
                                                  DIG 4 ;
                                                  CAR ;
                                                  CAR ;
                                                  CDR ;
                                                  PUSH bool True ;
                                                  PAIR ;
                                                  PAIR ;
                                                  PAIR } ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CDR ;
                                             CAR ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             COMPARE ;
                                             GE ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             DUP 4 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             COMPARE ;
                                             EQ ;
                                             AND ;
                                             IF { PUSH string "Dex/wrong-token-id" ; FAILWITH } {} ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             COMPARE ;
                                             GT ;
                                             IF { PUSH string "Dex/wrong-pair" ; FAILWITH } {} ;
                                             DUP ;
                                             DUP 3 ;
                                             CAR ;
                                             PAIR ;
                                             DIG 8 ;
                                             SWAP ;
                                             EXEC ;
                                             DUP ;
                                             CAR ;
                                             SWAP ;
                                             CDR ;
                                             DUP ;
                                             DUP 4 ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             COMPARE ;
                                             EQ ;
                                             IF { DUP 3 ;
                                                  CDR ;
                                                  CDR ;
                                                  DUP 4 ;
                                                  CDR ;
                                                  CAR ;
                                                  DUP 3 ;
                                                  DUP 7 ;
                                                  CAR ;
                                                  PACK ;
                                                  SWAP ;
                                                  SOME ;
                                                  SWAP ;
                                                  UPDATE ;
                                                  PAIR ;
                                                  DIG 3 ;
                                                  CAR ;
                                                  PAIR ;
                                                  DUP ;
                                                  CDR ;
                                                  PUSH nat 1 ;
                                                  DUP 3 ;
                                                  CAR ;
                                                  CDR ;
                                                  CDR ;
                                                  ADD ;
                                                  DUP 3 ;
                                                  CAR ;
                                                  CDR ;
                                                  CAR ;
                                                  PAIR ;
                                                  DIG 2 ;
                                                  CAR ;
                                                  CAR ;
                                                  PAIR ;
                                                  PAIR }
                                                { DIG 2 } ;
                                             PUSH nat 0 ;
                                             DUP 4 ;
                                             CAR ;
                                             CDR ;
                                             DUP 5 ;
                                             CAR ;
                                             CAR ;
                                             MUL ;
                                             COMPARE ;
                                             NEQ ;
                                             IF { PUSH string "Dex/non-zero-reserves" ; FAILWITH } {} ;
                                             PUSH nat 0 ;
                                             DUP 4 ;
                                             CDR ;
                                             COMPARE ;
                                             NEQ ;
                                             IF { PUSH string "Dex/non-zero-shares" ; FAILWITH } {} ;
                                             PUSH nat 1 ;
                                             DUP 5 ;
                                             CDR ;
                                             CAR ;
                                             COMPARE ;
                                             LT ;
                                             IF { PUSH string "Dex/no-token-a" ; FAILWITH } {} ;
                                             PUSH nat 1 ;
                                             DUP 5 ;
                                             CDR ;
                                             CDR ;
                                             COMPARE ;
                                             LT ;
                                             IF { PUSH string "Dex/no-token-b" ; FAILWITH } {} ;
                                             DUP 4 ;
                                             CDR ;
                                             CDR ;
                                             DUP 5 ;
                                             CDR ;
                                             CAR ;
                                             COMPARE ;
                                             LT ;
                                             IF { DUP 4 ; CDR ; CAR } { DUP 4 ; CDR ; CDR } ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CDR ;
                                             DUP 3 ;
                                             CAR ;
                                             CDR ;
                                             DUP 4 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             DUP 4 ;
                                             EMPTY_SET address ;
                                             PAIR ;
                                             DUP 7 ;
                                             SENDER ;
                                             PAIR ;
                                             SWAP ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             DIG 4 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             DUP 3 ;
                                             CAR ;
                                             CDR ;
                                             CAR ;
                                             DIG 4 ;
                                             DUP 7 ;
                                             CDR ;
                                             DIG 7 ;
                                             CAR ;
                                             CDR ;
                                             DUP 9 ;
                                             CDR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             DUP ;
                                             CDR ;
                                             DUP 9 ;
                                             CDR ;
                                             CDR ;
                                             DIG 2 ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             CAR ;
                                             PAIR ;
                                             DUP 6 ;
                                             SWAP ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             PAIR ;
                                             DIG 2 ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             CAR ;
                                             IF_LEFT
                                               { DROP ;
                                                 DIG 3 ;
                                                 DUP 4 ;
                                                 CAR ;
                                                 CAR ;
                                                 CAR ;
                                                 CAR ;
                                                 DUP 5 ;
                                                 CDR ;
                                                 CAR ;
                                                 PAIR ;
                                                 DUP 6 ;
                                                 SENDER ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DUP 8 ;
                                                 SWAP ;
                                                 EXEC ;
                                                 CONS }
                                               { DROP ;
                                                 DIG 3 ;
                                                 DUP 4 ;
                                                 CAR ;
                                                 CAR ;
                                                 CAR ;
                                                 CAR ;
                                                 DUP 5 ;
                                                 CAR ;
                                                 CAR ;
                                                 CAR ;
                                                 CDR ;
                                                 DUP 6 ;
                                                 CDR ;
                                                 CAR ;
                                                 PAIR ;
                                                 DUP 7 ;
                                                 SENDER ;
                                                 PAIR ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DUP 9 ;
                                                 SWAP ;
                                                 EXEC ;
                                                 CONS } ;
                                             DUP 4 ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             IF_LEFT
                                               { DROP ;
                                                 DIG 7 ;
                                                 DROP ;
                                                 DUP 4 ;
                                                 CAR ;
                                                 CAR ;
                                                 CDR ;
                                                 CDR ;
                                                 DUP 5 ;
                                                 CDR ;
                                                 CDR ;
                                                 PAIR ;
                                                 DIG 5 ;
                                                 SENDER ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DIG 6 ;
                                                 SWAP ;
                                                 EXEC ;
                                                 CONS }
                                               { DROP ;
                                                 DIG 6 ;
                                                 DROP ;
                                                 DUP 4 ;
                                                 CAR ;
                                                 CAR ;
                                                 CDR ;
                                                 CDR ;
                                                 DUP 5 ;
                                                 CAR ;
                                                 CDR ;
                                                 CAR ;
                                                 DUP 6 ;
                                                 CDR ;
                                                 CDR ;
                                                 PAIR ;
                                                 DIG 6 ;
                                                 SENDER ;
                                                 PAIR ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DIG 6 ;
                                                 SWAP ;
                                                 EXEC ;
                                                 CONS } ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CDR ;
                                             CDR ;
                                             DIG 4 ;
                                             CAR ;
                                             DIG 4 ;
                                             SWAP ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             DUP 3 ;
                                             CDR ;
                                             CAR ;
                                             PAIR ;
                                             DIG 2 ;
                                             CAR ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR } }
                                       { DIG 2 ;
                                         DROP ;
                                         DIG 2 ;
                                         DROP ;
                                         DIG 2 ;
                                         DROP ;
                                         DIG 3 ;
                                         DROP ;
                                         DIG 3 ;
                                         DROP ;
                                         DIG 3 ;
                                         DROP ;
                                         IF_LEFT { DROP } { DROP } } }
                                   { DROP ;
                                     SWAP ;
                                     DROP ;
                                     SWAP ;
                                     DROP ;
                                     SWAP ;
                                     DROP ;
                                     DIG 2 ;
                                     DROP ;
                                     DIG 2 ;
                                     DROP ;
                                     DIG 2 ;
                                     DROP } } }
                           { IF_LEFT
                               { DROP ;
                                 SWAP ;
                                 DUP 3 ;
                                 CDR ;
                                 CAR ;
                                 DIG 2 ;
                                 NIL operation ;
                                 DUP 4 ;
                                 DIG 8 ;
                                 SWAP ;
                                 EXEC ;
                                 PUSH mutez 0 ;
                                 UNIT ;
                                 TRANSFER_TOKENS ;
                                 CONS ;
                                 DUP 3 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 PAIR ;
                                 DIG 2 ;
                                 IF_LEFT
                                   { IF_LEFT
                                       { DIG 2 ;
                                         DROP ;
                                         DIG 2 ;
                                         DROP ;
                                         DIG 2 ;
                                         DROP ;
                                         DIG 3 ;
                                         DROP ;
                                         DIG 3 ;
                                         DROP ;
                                         DIG 3 ;
                                         DROP ;
                                         DIG 3 ;
                                         DROP ;
                                         IF_LEFT { DROP } { DROP } }
                                       { IF_LEFT
                                           { SWAP ;
                                             DROP ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             IF { PUSH string "Dex/reentrancy" ; FAILWITH }
                                                { DUP 3 ;
                                                  CDR ;
                                                  DUP 4 ;
                                                  CAR ;
                                                  CDR ;
                                                  DIG 4 ;
                                                  CAR ;
                                                  CAR ;
                                                  CDR ;
                                                  PUSH bool True ;
                                                  PAIR ;
                                                  PAIR ;
                                                  PAIR } ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CDR ;
                                             CAR ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             COMPARE ;
                                             GE ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             DUP 4 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             COMPARE ;
                                             EQ ;
                                             AND ;
                                             IF { PUSH string "Dex/wrong-token-id" ; FAILWITH } {} ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             COMPARE ;
                                             GT ;
                                             IF { PUSH string "Dex/wrong-pair" ; FAILWITH } {} ;
                                             DUP ;
                                             DUP 3 ;
                                             CAR ;
                                             PAIR ;
                                             DIG 8 ;
                                             SWAP ;
                                             EXEC ;
                                             DUP ;
                                             CAR ;
                                             SWAP ;
                                             CDR ;
                                             PUSH nat 0 ;
                                             DUP 3 ;
                                             CAR ;
                                             CDR ;
                                             DUP 4 ;
                                             CAR ;
                                             CAR ;
                                             MUL ;
                                             COMPARE ;
                                             GT ;
                                             IF {} { PUSH string "Dex/not-launched" ; FAILWITH } ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CAR ;
                                             DUP 3 ;
                                             CDR ;
                                             DUP 6 ;
                                             CDR ;
                                             CAR ;
                                             MUL ;
                                             EDIV ;
                                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                             CAR ;
                                             DUP 3 ;
                                             CAR ;
                                             CDR ;
                                             DUP 4 ;
                                             CDR ;
                                             DUP 7 ;
                                             CDR ;
                                             CDR ;
                                             MUL ;
                                             EDIV ;
                                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                             CAR ;
                                             DUP ;
                                             DUP 3 ;
                                             COMPARE ;
                                             LT ;
                                             IF { DROP } { SWAP ; DROP } ;
                                             PUSH nat 0 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             COMPARE ;
                                             GT ;
                                             IF {} { PUSH string "Dex/wrong-params" ; FAILWITH } ;
                                             DUP 3 ;
                                             CDR ;
                                             DUP 4 ;
                                             CAR ;
                                             CAR ;
                                             DUP 3 ;
                                             MUL ;
                                             EDIV ;
                                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                             CAR ;
                                             DUP 4 ;
                                             CDR ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             MUL ;
                                             DUP 5 ;
                                             CAR ;
                                             CAR ;
                                             DUP 4 ;
                                             MUL ;
                                             COMPARE ;
                                             GT ;
                                             IF { PUSH nat 1 ; ADD } {} ;
                                             DUP 4 ;
                                             CDR ;
                                             DUP 5 ;
                                             CAR ;
                                             CDR ;
                                             DUP 4 ;
                                             MUL ;
                                             EDIV ;
                                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                             CAR ;
                                             DUP 5 ;
                                             CDR ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             MUL ;
                                             DUP 6 ;
                                             CAR ;
                                             CDR ;
                                             DUP 5 ;
                                             MUL ;
                                             COMPARE ;
                                             GT ;
                                             IF { PUSH nat 1 ; ADD } {} ;
                                             PUSH nat 0 ;
                                             DUP 3 ;
                                             COMPARE ;
                                             EQ ;
                                             IF { PUSH string "Dex/zero-token-a-in" ; FAILWITH } {} ;
                                             PUSH nat 0 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             COMPARE ;
                                             EQ ;
                                             IF { PUSH string "Dex/zero-token-b-in" ; FAILWITH } {} ;
                                             DUP 7 ;
                                             CDR ;
                                             CAR ;
                                             DUP 3 ;
                                             COMPARE ;
                                             GT ;
                                             IF { PUSH string "Dex/low-max-token-a-in" ; FAILWITH } {} ;
                                             DUP 7 ;
                                             CDR ;
                                             CDR ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             COMPARE ;
                                             GT ;
                                             IF { PUSH string "Dex/low-max-token-b-in" ; FAILWITH } {} ;
                                             DUP 6 ;
                                             DUP 5 ;
                                             SENDER ;
                                             PAIR ;
                                             PAIR ;
                                             DIG 13 ;
                                             SWAP ;
                                             EXEC ;
                                             DUP 4 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CDR ;
                                             ADD ;
                                             SWAP ;
                                             CAR ;
                                             PAIR ;
                                             DUP 7 ;
                                             CDR ;
                                             DUP 8 ;
                                             CAR ;
                                             CDR ;
                                             DUP 9 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             DIG 3 ;
                                             DUP 8 ;
                                             SENDER ;
                                             PAIR ;
                                             SWAP ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             DIG 8 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             DUP 6 ;
                                             CDR ;
                                             DUP 7 ;
                                             CAR ;
                                             CDR ;
                                             DUP 5 ;
                                             DIG 8 ;
                                             CAR ;
                                             CAR ;
                                             ADD ;
                                             PAIR ;
                                             PAIR ;
                                             DUP ;
                                             CDR ;
                                             DUP 4 ;
                                             DUP 3 ;
                                             CAR ;
                                             CDR ;
                                             ADD ;
                                             DIG 2 ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             DIG 4 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CDR ;
                                             ADD ;
                                             SWAP ;
                                             CAR ;
                                             PAIR ;
                                             DUP 6 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             CAR ;
                                             IF_LEFT
                                               { DROP ;
                                                 DIG 6 ;
                                                 DUP 7 ;
                                                 CAR ;
                                                 CAR ;
                                                 CAR ;
                                                 CAR ;
                                                 DIG 5 ;
                                                 PAIR ;
                                                 DUP 8 ;
                                                 SENDER ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DUP 10 ;
                                                 SWAP ;
                                                 EXEC ;
                                                 CONS }
                                               { DROP ;
                                                 DIG 6 ;
                                                 DUP 7 ;
                                                 CAR ;
                                                 CAR ;
                                                 CAR ;
                                                 CAR ;
                                                 DUP 8 ;
                                                 CAR ;
                                                 CAR ;
                                                 CAR ;
                                                 CDR ;
                                                 DIG 6 ;
                                                 PAIR ;
                                                 DUP 9 ;
                                                 SENDER ;
                                                 PAIR ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DUP 11 ;
                                                 SWAP ;
                                                 EXEC ;
                                                 CONS } ;
                                             DUP 6 ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             IF_LEFT
                                               { DROP ;
                                                 DIG 9 ;
                                                 DROP ;
                                                 DIG 5 ;
                                                 CAR ;
                                                 CAR ;
                                                 CDR ;
                                                 CDR ;
                                                 DIG 4 ;
                                                 PAIR ;
                                                 DIG 5 ;
                                                 SENDER ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DIG 6 ;
                                                 SWAP ;
                                                 EXEC ;
                                                 CONS }
                                               { DROP ;
                                                 DIG 8 ;
                                                 DROP ;
                                                 DUP 6 ;
                                                 CAR ;
                                                 CAR ;
                                                 CDR ;
                                                 CDR ;
                                                 DIG 6 ;
                                                 CAR ;
                                                 CDR ;
                                                 CAR ;
                                                 DIG 5 ;
                                                 PAIR ;
                                                 DIG 6 ;
                                                 SENDER ;
                                                 PAIR ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DIG 6 ;
                                                 SWAP ;
                                                 EXEC ;
                                                 CONS } ;
                                             DUP 3 ;
                                             CDR ;
                                             DUP 4 ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             DUP 5 ;
                                             CAR ;
                                             CDR ;
                                             CAR ;
                                             DIG 4 ;
                                             DIG 6 ;
                                             SWAP ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             PAIR ;
                                             DIG 3 ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR }
                                           { DROP ;
                                             SWAP ;
                                             DROP ;
                                             SWAP ;
                                             DROP ;
                                             SWAP ;
                                             DROP ;
                                             DIG 2 ;
                                             DROP ;
                                             DIG 2 ;
                                             DROP ;
                                             DIG 2 ;
                                             DROP ;
                                             DIG 2 ;
                                             DROP } } }
                                   { DROP ;
                                     SWAP ;
                                     DROP ;
                                     SWAP ;
                                     DROP ;
                                     SWAP ;
                                     DROP ;
                                     DIG 2 ;
                                     DROP ;
                                     DIG 2 ;
                                     DROP ;
                                     DIG 2 ;
                                     DROP ;
                                     DIG 2 ;
                                     DROP } }
                               { DROP ;
                                 DIG 7 ;
                                 DROP ;
                                 SWAP ;
                                 DUP 3 ;
                                 CDR ;
                                 CAR ;
                                 DIG 2 ;
                                 NIL operation ;
                                 DUP 4 ;
                                 DIG 8 ;
                                 SWAP ;
                                 EXEC ;
                                 PUSH mutez 0 ;
                                 UNIT ;
                                 TRANSFER_TOKENS ;
                                 CONS ;
                                 DUP 3 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 PAIR ;
                                 DIG 2 ;
                                 IF_LEFT
                                   { IF_LEFT
                                       { DIG 2 ;
                                         DROP ;
                                         DIG 2 ;
                                         DROP ;
                                         DIG 2 ;
                                         DROP ;
                                         DIG 3 ;
                                         DROP ;
                                         DIG 3 ;
                                         DROP ;
                                         DIG 3 ;
                                         DROP ;
                                         IF_LEFT { DROP } { DROP } }
                                       { IF_LEFT
                                           { DROP ;
                                             SWAP ;
                                             DROP ;
                                             SWAP ;
                                             DROP ;
                                             SWAP ;
                                             DROP ;
                                             DIG 2 ;
                                             DROP ;
                                             DIG 2 ;
                                             DROP ;
                                             DIG 2 ;
                                             DROP }
                                           { SWAP ;
                                             DROP ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             IF { PUSH string "Dex/reentrancy" ; FAILWITH }
                                                { DUP 3 ;
                                                  CDR ;
                                                  DUP 4 ;
                                                  CAR ;
                                                  CDR ;
                                                  DIG 4 ;
                                                  CAR ;
                                                  CAR ;
                                                  CDR ;
                                                  PUSH bool True ;
                                                  PAIR ;
                                                  PAIR ;
                                                  PAIR } ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CDR ;
                                             CAR ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             COMPARE ;
                                             GE ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             DUP 4 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             COMPARE ;
                                             EQ ;
                                             AND ;
                                             IF { PUSH string "Dex/wrong-token-id" ; FAILWITH } {} ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             COMPARE ;
                                             GT ;
                                             IF { PUSH string "Dex/wrong-pair" ; FAILWITH } {} ;
                                             DUP ;
                                             DUP 3 ;
                                             CAR ;
                                             PAIR ;
                                             DIG 8 ;
                                             SWAP ;
                                             EXEC ;
                                             DUP ;
                                             CAR ;
                                             PUSH nat 0 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CDR ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             MUL ;
                                             COMPARE ;
                                             GT ;
                                             IF {} { PUSH string "Dex/not-launched" ; FAILWITH } ;
                                             PUSH nat 0 ;
                                             DUP 5 ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             COMPARE ;
                                             GT ;
                                             IF {} { PUSH string "Dex/zero-amount-in" ; FAILWITH } ;
                                             PUSH nat 0 ;
                                             DUP 5 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             COMPARE ;
                                             GT ;
                                             IF {} { PUSH string "Dex/zero-min-amount-out" ; FAILWITH } ;
                                             DUP 4 ;
                                             CDR ;
                                             CAR ;
                                             IF_LEFT
                                               { DROP ;
                                                 PUSH nat 997 ;
                                                 DUP 5 ;
                                                 CDR ;
                                                 CDR ;
                                                 CAR ;
                                                 MUL ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 CAR ;
                                                 CAR ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 MUL ;
                                                 SWAP ;
                                                 PUSH nat 1000 ;
                                                 DUP 4 ;
                                                 CAR ;
                                                 CDR ;
                                                 MUL ;
                                                 ADD ;
                                                 SWAP ;
                                                 EDIV ;
                                                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                 CAR ;
                                                 DUP 5 ;
                                                 CDR ;
                                                 CDR ;
                                                 CDR ;
                                                 CAR ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 COMPARE ;
                                                 GE ;
                                                 IF {} { PUSH string "Dex/wrong-min-out" ; FAILWITH } ;
                                                 PUSH nat 3 ;
                                                 DUP 3 ;
                                                 CAR ;
                                                 CAR ;
                                                 EDIV ;
                                                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                 CAR ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 COMPARE ;
                                                 LE ;
                                                 IF { SWAP ;
                                                      DUP ;
                                                      DUG 2 ;
                                                      CDR ;
                                                      DUP 3 ;
                                                      CAR ;
                                                      CDR ;
                                                      DUP 3 ;
                                                      DIG 4 ;
                                                      CAR ;
                                                      CAR ;
                                                      SUB ;
                                                      ABS ;
                                                      PAIR ;
                                                      PAIR ;
                                                      DUP ;
                                                      CDR ;
                                                      DUP 6 ;
                                                      CDR ;
                                                      CDR ;
                                                      CAR ;
                                                      DUP 3 ;
                                                      CAR ;
                                                      CDR ;
                                                      ADD ;
                                                      DIG 2 ;
                                                      CAR ;
                                                      CAR ;
                                                      PAIR ;
                                                      PAIR }
                                                    { PUSH string "Dex/high-out" ; FAILWITH } ;
                                                 DUP 5 ;
                                                 CAR ;
                                                 CAR ;
                                                 CDR ;
                                                 CAR ;
                                                 IF_LEFT
                                                   { DROP ;
                                                     DIG 5 ;
                                                     DUP 6 ;
                                                     CAR ;
                                                     CAR ;
                                                     CAR ;
                                                     CAR ;
                                                     DIG 3 ;
                                                     PAIR ;
                                                     DUP 6 ;
                                                     CDR ;
                                                     CDR ;
                                                     CDR ;
                                                     CDR ;
                                                     DUP 8 ;
                                                     PAIR ;
                                                     PAIR ;
                                                     DUP 9 ;
                                                     SWAP ;
                                                     EXEC ;
                                                     CONS }
                                                   { DROP ;
                                                     DIG 5 ;
                                                     DUP 6 ;
                                                     CAR ;
                                                     CAR ;
                                                     CAR ;
                                                     CAR ;
                                                     DUP 7 ;
                                                     CAR ;
                                                     CAR ;
                                                     CAR ;
                                                     CDR ;
                                                     DIG 4 ;
                                                     PAIR ;
                                                     DUP 7 ;
                                                     CDR ;
                                                     CDR ;
                                                     CDR ;
                                                     CDR ;
                                                     DUP 9 ;
                                                     PAIR ;
                                                     PAIR ;
                                                     PAIR ;
                                                     DUP 10 ;
                                                     SWAP ;
                                                     EXEC ;
                                                     CONS } ;
                                                 DUP 5 ;
                                                 CAR ;
                                                 CDR ;
                                                 CDR ;
                                                 IF_LEFT
                                                   { DROP ;
                                                     DIG 8 ;
                                                     DROP ;
                                                     DUP 5 ;
                                                     CAR ;
                                                     CAR ;
                                                     CDR ;
                                                     CDR ;
                                                     DIG 5 ;
                                                     CDR ;
                                                     CDR ;
                                                     CAR ;
                                                     PAIR ;
                                                     DIG 5 ;
                                                     SENDER ;
                                                     PAIR ;
                                                     PAIR ;
                                                     DIG 6 ;
                                                     SWAP ;
                                                     EXEC ;
                                                     CONS }
                                                   { DROP ;
                                                     DIG 7 ;
                                                     DROP ;
                                                     DUP 5 ;
                                                     CAR ;
                                                     CAR ;
                                                     CDR ;
                                                     CDR ;
                                                     DUP 6 ;
                                                     CAR ;
                                                     CDR ;
                                                     CAR ;
                                                     DIG 6 ;
                                                     CDR ;
                                                     CDR ;
                                                     CAR ;
                                                     PAIR ;
                                                     DIG 6 ;
                                                     SENDER ;
                                                     PAIR ;
                                                     PAIR ;
                                                     PAIR ;
                                                     DIG 6 ;
                                                     SWAP ;
                                                     EXEC ;
                                                     CONS } ;
                                                 PAIR }
                                               { DROP ;
                                                 PUSH nat 997 ;
                                                 DUP 5 ;
                                                 CDR ;
                                                 CDR ;
                                                 CAR ;
                                                 MUL ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 CAR ;
                                                 CDR ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 MUL ;
                                                 SWAP ;
                                                 PUSH nat 1000 ;
                                                 DUP 4 ;
                                                 CAR ;
                                                 CAR ;
                                                 MUL ;
                                                 ADD ;
                                                 SWAP ;
                                                 EDIV ;
                                                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                 CAR ;
                                                 DUP 5 ;
                                                 CDR ;
                                                 CDR ;
                                                 CDR ;
                                                 CAR ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 COMPARE ;
                                                 GE ;
                                                 IF {} { PUSH string "Dex/wrong-min-out" ; FAILWITH } ;
                                                 PUSH nat 3 ;
                                                 DUP 3 ;
                                                 CAR ;
                                                 CDR ;
                                                 EDIV ;
                                                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                 CAR ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 COMPARE ;
                                                 LE ;
                                                 IF { SWAP ;
                                                      DUP ;
                                                      DUG 2 ;
                                                      CDR ;
                                                      SWAP ;
                                                      DUP ;
                                                      DUG 2 ;
                                                      DUP 4 ;
                                                      CAR ;
                                                      CDR ;
                                                      SUB ;
                                                      ABS ;
                                                      DIG 3 ;
                                                      CAR ;
                                                      CAR ;
                                                      PAIR ;
                                                      PAIR ;
                                                      DUP ;
                                                      CDR ;
                                                      SWAP ;
                                                      DUP ;
                                                      DUG 2 ;
                                                      CAR ;
                                                      CDR ;
                                                      DUP 7 ;
                                                      CDR ;
                                                      CDR ;
                                                      CAR ;
                                                      DIG 3 ;
                                                      CAR ;
                                                      CAR ;
                                                      ADD ;
                                                      PAIR ;
                                                      PAIR }
                                                    { PUSH string "Dex/high-out" ; FAILWITH } ;
                                                 DUP 5 ;
                                                 CAR ;
                                                 CAR ;
                                                 CDR ;
                                                 CAR ;
                                                 IF_LEFT
                                                   { DROP ;
                                                     DIG 5 ;
                                                     DUP 6 ;
                                                     CAR ;
                                                     CAR ;
                                                     CAR ;
                                                     CAR ;
                                                     DUP 7 ;
                                                     CDR ;
                                                     CDR ;
                                                     CAR ;
                                                     PAIR ;
                                                     DUP 8 ;
                                                     SENDER ;
                                                     PAIR ;
                                                     PAIR ;
                                                     DUP 10 ;
                                                     SWAP ;
                                                     EXEC ;
                                                     CONS }
                                                   { DROP ;
                                                     DIG 5 ;
                                                     DUP 6 ;
                                                     CAR ;
                                                     CAR ;
                                                     CAR ;
                                                     CAR ;
                                                     DUP 7 ;
                                                     CAR ;
                                                     CAR ;
                                                     CAR ;
                                                     CDR ;
                                                     DUP 8 ;
                                                     CDR ;
                                                     CDR ;
                                                     CAR ;
                                                     PAIR ;
                                                     DUP 9 ;
                                                     SENDER ;
                                                     PAIR ;
                                                     PAIR ;
                                                     PAIR ;
                                                     DUP 11 ;
                                                     SWAP ;
                                                     EXEC ;
                                                     CONS } ;
                                                 DUP 6 ;
                                                 CAR ;
                                                 CDR ;
                                                 CDR ;
                                                 IF_LEFT
                                                   { DROP ;
                                                     DIG 9 ;
                                                     DROP ;
                                                     DUP 6 ;
                                                     CAR ;
                                                     CAR ;
                                                     CDR ;
                                                     CDR ;
                                                     DIG 3 ;
                                                     PAIR ;
                                                     DIG 5 ;
                                                     CDR ;
                                                     CDR ;
                                                     CDR ;
                                                     CDR ;
                                                     DIG 6 ;
                                                     PAIR ;
                                                     PAIR ;
                                                     DIG 6 ;
                                                     SWAP ;
                                                     EXEC ;
                                                     CONS }
                                                   { DROP ;
                                                     DIG 8 ;
                                                     DROP ;
                                                     DUP 6 ;
                                                     CAR ;
                                                     CAR ;
                                                     CDR ;
                                                     CDR ;
                                                     DUP 7 ;
                                                     CAR ;
                                                     CDR ;
                                                     CAR ;
                                                     DIG 4 ;
                                                     PAIR ;
                                                     DIG 6 ;
                                                     CDR ;
                                                     CDR ;
                                                     CDR ;
                                                     CDR ;
                                                     DIG 7 ;
                                                     PAIR ;
                                                     PAIR ;
                                                     PAIR ;
                                                     DIG 6 ;
                                                     SWAP ;
                                                     EXEC ;
                                                     CONS } ;
                                                 PAIR } ;
                                             DUP 3 ;
                                             CDR ;
                                             DUP 4 ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             DUP 5 ;
                                             CAR ;
                                             CDR ;
                                             CAR ;
                                             DUP 4 ;
                                             CDR ;
                                             DIG 5 ;
                                             CDR ;
                                             SWAP ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             PAIR ;
                                             DIG 3 ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             SWAP ;
                                             CAR ;
                                             PAIR } } }
                                   { DROP ;
                                     SWAP ;
                                     DROP ;
                                     SWAP ;
                                     DROP ;
                                     SWAP ;
                                     DROP ;
                                     DIG 2 ;
                                     DROP ;
                                     DIG 2 ;
                                     DROP ;
                                     DIG 2 ;
                                     DROP } } } }
                       { DROP ;
                         DIG 7 ;
                         DROP ;
                         SWAP ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         DIG 2 ;
                         NIL operation ;
                         DUP 4 ;
                         DIG 8 ;
                         SWAP ;
                         EXEC ;
                         PUSH mutez 0 ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DUP 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIG 2 ;
                         IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             DIG 3 ;
                             DROP ;
                             DIG 3 ;
                             DROP ;
                             DIG 3 ;
                             DROP ;
                             IF_LEFT
                               { IF_LEFT { DROP } { DROP } }
                               { IF_LEFT { DROP } { DROP } } }
                           { SWAP ;
                             DROP ;
                             DUP 3 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             IF { PUSH string "Dex/reentrancy" ; FAILWITH }
                                { DUP 3 ;
                                  CDR ;
                                  DUP 4 ;
                                  CAR ;
                                  CDR ;
                                  DIG 4 ;
                                  CAR ;
                                  CAR ;
                                  CDR ;
                                  PUSH bool True ;
                                  PAIR ;
                                  PAIR ;
                                  PAIR } ;
                             PUSH nat 1 ;
                             DUP 3 ;
                             CAR ;
                             SIZE ;
                             COMPARE ;
                             GT ;
                             IF {} { PUSH string "Dex/too-few-swaps" ; FAILWITH } ;
                             PUSH nat 0 ;
                             DUP 3 ;
                             CDR ;
                             CAR ;
                             COMPARE ;
                             GT ;
                             IF {} { PUSH string "Dex/zero-amount-in" ; FAILWITH } ;
                             PUSH nat 0 ;
                             DUP 3 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             COMPARE ;
                             GT ;
                             IF {} { PUSH string "Dex/zero-min-amount-out" ; FAILWITH } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             IF_CONS
                               { SWAP ; DROP ; SOME }
                               { NONE (pair (or unit unit)
                                            (pair (pair (pair address nat) (pair (or unit unit) address)) (pair nat (or unit unit)))) } ;
                             IF_NONE { PUSH string "Dex/zero-swaps" ; FAILWITH } {} ;
                             DUP ;
                             CDR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             DUP 6 ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             IF_LEFT
                               { DROP ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 CDR ;
                                 CDR ;
                                 IF_LEFT
                                   { DROP ;
                                     DIG 4 ;
                                     DUP 3 ;
                                     CDR ;
                                     CAR ;
                                     CDR ;
                                     CDR ;
                                     DUP 6 ;
                                     CDR ;
                                     CAR ;
                                     PAIR ;
                                     DUP 7 ;
                                     SENDER ;
                                     PAIR ;
                                     PAIR ;
                                     DUP 9 ;
                                     SWAP ;
                                     EXEC ;
                                     CONS }
                                   { DROP ;
                                     DIG 4 ;
                                     DUP 3 ;
                                     CDR ;
                                     CAR ;
                                     CDR ;
                                     CDR ;
                                     DUP 4 ;
                                     CDR ;
                                     CDR ;
                                     CAR ;
                                     DUP 7 ;
                                     CDR ;
                                     CAR ;
                                     PAIR ;
                                     DUP 8 ;
                                     SENDER ;
                                     PAIR ;
                                     PAIR ;
                                     PAIR ;
                                     DUP 10 ;
                                     SWAP ;
                                     EXEC ;
                                     CONS } ;
                                 DUP 3 ;
                                 CDR ;
                                 CDR ;
                                 CAR ;
                                 DIG 2 ;
                                 CAR ;
                                 PAIR ;
                                 DUP ;
                                 CDR ;
                                 DIG 3 ;
                                 CDR ;
                                 CAR ;
                                 CDR ;
                                 CDR ;
                                 DIG 2 ;
                                 CAR ;
                                 CAR ;
                                 PAIR ;
                                 CDR ;
                                 DIG 2 ;
                                 PAIR ;
                                 PAIR }
                               { DROP ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 CAR ;
                                 CDR ;
                                 CAR ;
                                 IF_LEFT
                                   { DROP ;
                                     DIG 4 ;
                                     DIG 2 ;
                                     CDR ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     DUP 5 ;
                                     CDR ;
                                     CAR ;
                                     PAIR ;
                                     DUP 6 ;
                                     SENDER ;
                                     PAIR ;
                                     PAIR ;
                                     DUP 8 ;
                                     SWAP ;
                                     EXEC ;
                                     CONS }
                                   { DROP ;
                                     DIG 4 ;
                                     DUP 3 ;
                                     CDR ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     DIG 3 ;
                                     CDR ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     DUP 6 ;
                                     CDR ;
                                     CAR ;
                                     PAIR ;
                                     DUP 7 ;
                                     SENDER ;
                                     PAIR ;
                                     PAIR ;
                                     PAIR ;
                                     DUP 9 ;
                                     SWAP ;
                                     EXEC ;
                                     CONS } ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 DIG 2 ;
                                 CAR ;
                                 CDR ;
                                 DIG 2 ;
                                 PAIR ;
                                 PAIR } ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CDR ;
                             DIG 5 ;
                             PAIR ;
                             PAIR ;
                             DIG 2 ;
                             DUP 4 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             PAIR ;
                             NONE operation ;
                             DUP 5 ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             DUP 3 ;
                             CAR ;
                             ITER { DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    CDR ;
                                    CAR ;
                                    DUP 3 ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    COMPARE ;
                                    GE ;
                                    DUP 3 ;
                                    CDR ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    DUP 4 ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    COMPARE ;
                                    EQ ;
                                    AND ;
                                    IF { PUSH string "Dex/wrong-token-id" ; FAILWITH } {} ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    DUP 3 ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    COMPARE ;
                                    GT ;
                                    IF { PUSH string "Dex/wrong-pair" ; FAILWITH } {} ;
                                    DUP ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    DUP 3 ;
                                    CDR ;
                                    PAIR ;
                                    DUP 9 ;
                                    SWAP ;
                                    EXEC ;
                                    DUP ;
                                    CAR ;
                                    PUSH nat 0 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    CDR ;
                                    DUP 3 ;
                                    CAR ;
                                    CAR ;
                                    MUL ;
                                    COMPARE ;
                                    GT ;
                                    IF {} { PUSH string "Dex/not-launched" ; FAILWITH } ;
                                    PUSH nat 0 ;
                                    DUP 4 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    COMPARE ;
                                    GT ;
                                    IF {} { PUSH string "Dex/zero-amount-in" ; FAILWITH } ;
                                    DUP 4 ;
                                    CAR ;
                                    IF_LEFT
                                      { DROP ;
                                        DUP 3 ;
                                        CDR ;
                                        CDR ;
                                        DUP 5 ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        COMPARE ;
                                        EQ ;
                                        DUP 4 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        DUP 6 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        COMPARE ;
                                        EQ ;
                                        AND ;
                                        IF {} { PUSH string "Dex/wrong-route" ; FAILWITH } ;
                                        PUSH nat 997 ;
                                        DUP 4 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        MUL ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CAR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        MUL ;
                                        SWAP ;
                                        PUSH nat 1000 ;
                                        DUP 4 ;
                                        CAR ;
                                        CDR ;
                                        MUL ;
                                        ADD ;
                                        SWAP ;
                                        EDIV ;
                                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                        CAR ;
                                        PUSH nat 3 ;
                                        DUP 3 ;
                                        CAR ;
                                        CAR ;
                                        EDIV ;
                                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                        CAR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        COMPARE ;
                                        LE ;
                                        IF { SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CDR ;
                                             DUP 3 ;
                                             CAR ;
                                             CDR ;
                                             DUP 3 ;
                                             DIG 4 ;
                                             CAR ;
                                             CAR ;
                                             SUB ;
                                             ABS ;
                                             PAIR ;
                                             PAIR ;
                                             DUP ;
                                             CDR ;
                                             DUP 5 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             DUP 3 ;
                                             CAR ;
                                             CDR ;
                                             ADD ;
                                             DIG 2 ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR }
                                           { PUSH string "Dex/high-out" ; FAILWITH } ;
                                        DUP 4 ;
                                        CDR ;
                                        DUP 5 ;
                                        CAR ;
                                        CDR ;
                                        DIG 5 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DUP 5 ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP ;
                                        CDR ;
                                        CDR ;
                                        DUP 6 ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        DUP 3 ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        CAR ;
                                        PAIR ;
                                        DUP 5 ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        SWAP ;
                                        CAR ;
                                        PAIR ;
                                        DUP 5 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        IF_LEFT
                                          { DROP ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CAR ;
                                            CDR ;
                                            DIG 6 ;
                                            CDR ;
                                            CAR ;
                                            CAR ;
                                            CAR ;
                                            DIG 5 ;
                                            PAIR ;
                                            DUP 4 ;
                                            CAR ;
                                            CDR ;
                                            CAR ;
                                            DUP 5 ;
                                            CDR ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            PAIR ;
                                            DUP 10 ;
                                            SWAP ;
                                            EXEC ;
                                            SOME ;
                                            DIG 3 ;
                                            CAR ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            PAIR ;
                                            PAIR }
                                          { DROP ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CAR ;
                                            CDR ;
                                            DUP 7 ;
                                            CDR ;
                                            CAR ;
                                            CAR ;
                                            CAR ;
                                            DIG 7 ;
                                            CDR ;
                                            CAR ;
                                            CAR ;
                                            CDR ;
                                            DIG 6 ;
                                            PAIR ;
                                            DUP 5 ;
                                            CAR ;
                                            CDR ;
                                            CAR ;
                                            DUP 6 ;
                                            CDR ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            PAIR ;
                                            PAIR ;
                                            DUP 11 ;
                                            SWAP ;
                                            EXEC ;
                                            SOME ;
                                            DIG 3 ;
                                            CAR ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            PAIR ;
                                            PAIR } ;
                                        SWAP ;
                                        PAIR }
                                      { DROP ;
                                        DUP 3 ;
                                        CDR ;
                                        CDR ;
                                        DUP 5 ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        COMPARE ;
                                        EQ ;
                                        DUP 4 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        DUP 6 ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        COMPARE ;
                                        EQ ;
                                        AND ;
                                        IF {} { PUSH string "Dex/wrong-route" ; FAILWITH } ;
                                        PUSH nat 997 ;
                                        DUP 4 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        MUL ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        MUL ;
                                        SWAP ;
                                        PUSH nat 1000 ;
                                        DUP 4 ;
                                        CAR ;
                                        CAR ;
                                        MUL ;
                                        ADD ;
                                        SWAP ;
                                        EDIV ;
                                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                        CAR ;
                                        PUSH nat 3 ;
                                        DUP 3 ;
                                        CAR ;
                                        CDR ;
                                        EDIV ;
                                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                        CAR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        COMPARE ;
                                        LE ;
                                        IF { SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CDR ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             DUP 4 ;
                                             CAR ;
                                             CDR ;
                                             SUB ;
                                             ABS ;
                                             DIG 3 ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CDR ;
                                             DUP 6 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             DIG 3 ;
                                             CAR ;
                                             CAR ;
                                             ADD ;
                                             PAIR ;
                                             PAIR }
                                           { PUSH string "Dex/high-out" ; FAILWITH } ;
                                        DUP 4 ;
                                        CDR ;
                                        DUP 5 ;
                                        CAR ;
                                        CDR ;
                                        DIG 5 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DUP 5 ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP ;
                                        CDR ;
                                        CDR ;
                                        DUP 6 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        CAR ;
                                        PAIR ;
                                        DUP 5 ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        SWAP ;
                                        CAR ;
                                        PAIR ;
                                        DUP 5 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        IF_LEFT
                                          { DROP ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CAR ;
                                            CDR ;
                                            DIG 6 ;
                                            CDR ;
                                            CAR ;
                                            CDR ;
                                            CDR ;
                                            DIG 5 ;
                                            PAIR ;
                                            DUP 4 ;
                                            CAR ;
                                            CDR ;
                                            CAR ;
                                            DUP 5 ;
                                            CDR ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            PAIR ;
                                            DUP 10 ;
                                            SWAP ;
                                            EXEC ;
                                            SOME ;
                                            DIG 3 ;
                                            CAR ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            PAIR ;
                                            PAIR }
                                          { DROP ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CAR ;
                                            CDR ;
                                            DUP 7 ;
                                            CDR ;
                                            CAR ;
                                            CDR ;
                                            CDR ;
                                            DIG 7 ;
                                            CDR ;
                                            CDR ;
                                            CAR ;
                                            DIG 6 ;
                                            PAIR ;
                                            DUP 5 ;
                                            CAR ;
                                            CDR ;
                                            CAR ;
                                            DUP 6 ;
                                            CDR ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            PAIR ;
                                            PAIR ;
                                            DUP 11 ;
                                            SWAP ;
                                            EXEC ;
                                            SOME ;
                                            DIG 3 ;
                                            CAR ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            PAIR ;
                                            PAIR } ;
                                        SWAP ;
                                        PAIR } ;
                                    DUP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    CDR ;
                                    DUP 3 ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    DUP 4 ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    DIG 5 ;
                                    CAR ;
                                    DIG 6 ;
                                    CDR ;
                                    SWAP ;
                                    SOME ;
                                    SWAP ;
                                    UPDATE ;
                                    PAIR ;
                                    DUP 4 ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    PAIR ;
                                    PAIR ;
                                    DUP 3 ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    DIG 2 ;
                                    CAR ;
                                    CAR ;
                                    PAIR ;
                                    PAIR } ;
                             DIG 4 ;
                             DROP ;
                             DIG 4 ;
                             DROP ;
                             DIG 4 ;
                             DROP ;
                             DIG 2 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             COMPARE ;
                             GE ;
                             IF {} { PUSH string "Dex/wrong-min-out" ; FAILWITH } ;
                             DUP ;
                             CAR ;
                             CAR ;
                             CDR ;
                             IF_NONE { PUSH string "Dex/too-few-swaps" ; FAILWITH } {} ;
                             SWAP ;
                             CAR ;
                             CDR ;
                             CDR ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             DIG 2 ;
                             CONS ;
                             PAIR } } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR } } } } }

